---

# RHEL Clustering 
# Azure ref: https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-rhel-pacemaker

# @TODO Subscribe to subscriptions/repos if required
# This code assumes the deployment is using RHEL SAP image

- name: Ensure HA Cluster password is set to something secure
  user:
    name: hacluster
    password: "{{ ha_cluster_password | password_hash('sha512', 65534 | random(seed=inventory_hostname) | string) }}"

- name: Ensure the firewall service is configured to allow High Availability traffic
  firewalld:
    service: high-availability
    state: enabled
    permanent: True

- name: Ensure the Pacemaker service is started and enabled
  systemd:
    name: pcsd
    state: started
    enabled: True

# Basic Pacemaker cluster configuration:
# https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-rhel-pacemaker
- name: Create the cluster on the primary node
  when: ansible_hostname == primary_instance.name 
  block:
    - name: Ensure the cluster can authenticate nodes as hacluster
      when: ansible_distribution_major_version == "7"
      shell: "pcs cluster auth {{ primary_instance.name }} {{ secondary_instance.name }} -u hacluster -p {{ ha_cluster_password }}"
    
    - name: Ensure the cluster can authenticate nodes as hacluster
      when: ansible_distribution_major_version == "8"
      shell: "pcs host auth {{ primary_instance.name }} {{ secondary_instance.name }} -u hacluster -p {{ ha_cluster_password }}"

    # Ref https://docs.microsoft.com/en-us/azure/virtual-machines/maintenance-and-updates#maintenance-that-doesnt-require-a-reboot
    - name: Ensure the cluster is created with a token large enough to allow memory preserving maintenance
      when: ansible_distribution_major_version == "7"
      shell: "pcs cluster setup --name {{ sid | upper }}_hana_cluster {{ primary_instance.name }} {{ secondary_instance.name }} --token {{ cluster_totem.token }}"

    - name: Ensure the cluster is created with a token large enough to allow memory preserving maintenance
      when: ansible_distribution_major_version == "8"
      shell: "pcs cluster setup {{ sid | upper }}_hana_cluster {{ primary_instance.name }} {{ secondary_instance.name }} totem --token {{ cluster_totem.token }}"

    - name: Ensure the cluster is starting on all nodes
      shell: pcs cluster start --all

    - name: Wait until cluster has stabilised
      shell: pcs status | grep '^Online:'
      register: cluster_stable_check
      retries: 30
      delay: 10
      until: "'{{ primary_instance.name }} {{ secondary_instance.name }}' in cluster_stable_check.stdout or '{{ secondary_instance.name }} {{ primary_instance.name }}' in cluster_stable_check.stdout"
    
    - name: Allow Concurrent Fencing 
      shell: pcs property set concurrent-fencing=true

- name: Ensure the expected quorum votes is set for the cluster
  shell: "pcs quorum expected-votes {{ cluster_quorum.expected_votes }}"

- name: Configure the cluster STONITH device on the primary node
  when: ansible_hostname == primary_instance.name
  block:
    - name: Ensure STONITH timeout is raised
      shell: pcs property set stonith-timeout=900

    # This command assumes the Azure VM resource name matches the hostname
    # If this changes, the pcmk_host_map should be used
    - name: Ensure the STONTIH device is configured
      when: ansible_distribution_major_version == "7"
      shell: >
        pcs stonith create rsc_st_azure fence_azure_arm
        login="{{ sap_hana_fencing_agent_client_id }}"
        passwd="{{ sap_hana_fencing_agent_client_password }}"
        resourceGroup="{{ resource_group_name }}"
        tenantId="{{ sap_hana_fencing_agent_tenant_id }}"
        subscriptionId="{{ sap_hana_fencing_agent_subscription_id }}"
        power_timeout=240 
        pcmk_reboot_timeout=900
        pcmk_monitor_timeout=120
        pcmk_monitor_retries=4 
        pcmk_action_limit=3
        op monitor interval=3600
        
    
    - name: Ensure the STONTIH device is configured
      when: ansible_distribution_major_version == "8"
      shell: >
        pcs stonith create rsc_st_azure fence_azure_arm
        username="{{ sap_hana_fencing_agent_client_id }}"
        password="{{ sap_hana_fencing_agent_client_password }}"
        resourceGroup="{{ resource_group_name }}"
        tenantId="{{ sap_hana_fencing_agent_tenant_id }}"
        subscriptionId="{{ sap_hana_fencing_agent_subscription_id }}"
        power_timeout=240
        pcmk_reboot_timeout=900
        pcmk_monitor_timeout=120
        pcmk_monitor_retries=4 
        pcmk_action_limit=3
        op monitor interval=3600

    - name: Ensure the STONITH action is set to reboot
      shell: pcs property set stonith-action=reboot

    - name: Ensure the STONITH device is enabled
      shell: pcs property set stonith-enabled=true


#End of Generic Pacemaker setup 
