# /*----------------------------------------------------------------------------8
# |                                                                             |
# | Playbook for PACEMAKER General Config                                       |
# | This playbook will setup a generic pacemaker cluster on DB and SCS hosts    | 
# | The playbook user Azure fence Agent for node fencing. It gets the SPN       |  
# | credentions from Key Vault. These credentianls are used to create Stonith.  |                                                              |
# +------------------------------------4---------------------------------------*| 
---

# TODO: 
#  

- hosts: localhost
  name: Get SPN from KeyVault
  remote_user:    "{{ orchestration_ansible_user }}"
  become:         yes
  become_user:    root
  gather_facts:   no
  vars_files:
    - vars/ansible-input-api.yaml                               # API Input template with defaults
  tasks:
  - set_fact:
      tier:  fencing

  - include_role:
      name:     roles-misc/0.2-kv-secrets
    tags:
       - kv-secrets


- hosts:          "{{ sap_sid|upper }}_DB  :
                   {{ sap_sid|upper }}_SCS"                                           

  name:           PACEMAKER - General Config
  remote_user:    "{{ orchestration_ansible_user }}"                
  become:         yes
  become_user:    root
  gather_facts:   true
  vars_files:
    - vars/ansible-input-api.yaml                               # API Input template with defaults


  tasks:

  # - name: Test Connection                                     # Simple connection test for troubleshooting
  #   ping:


  tasks:
# -------------------------------------+---------------------------------------8
#
# Build the list of tasks to be executed in order here. 
#
# -------------------------------------+---------------------------------------8

# Specify the active tier for this playbook run
  - set_fact:
      tier:    [ hdb, fencing, ha]
      primary_instance_name : "{{ ansible_play_hosts_all[0] }}"         # Setting up Primary Instance Name
      secondary_instance_name: "{{ ansible_play_hosts_all[1] }}"        # Setting up Secondary Instance Name
      sap_hana_fencing_spn_client_id: "{{ hostvars.localhost.sap_fencing_spn_client_id }}"
      sap_hana_fencing_spn_client_pwd: "{{ hostvars.localhost.sap_fencing_spn_pwd }}"
      sap_hana_fencing_spn_tenant_id: "{{ hostvars.localhost.sap_fencing_spn_tenant_id }}"
  
  - include_role:
      name:     roles-os/1.3-repository                                 # Repo required for JQ package 

  - include_role:
      name:     roles-os/1.4-packages                                   # Install the HA packages required for pacemaker

  - include_role:
      name:     roles-os/6.0.0.0-Generic                                # Configures the Pacemaker cluster with Azure fence agent 

  
#----------------------------------------
# BEGIN
#
# TODO: evaluate for inclusion and refactor.
# SOURCE: sap-playbook
#----------------------------------------

# # Only SLES support SBD fencing
# - hosts: iscsi
#   become: true
#   become_user: root
#   roles:
#    - role: iscsi-target-install
#      when:
#        - hana_database.size != "LargeInstance"
#        - hana_database.high_availability
#        - hostvars[hana_database.nodes[0].ip_admin_nic].ansible_os_family == 'Suse'

#----------------------------------------
# END
#----------------------------------------


...
# /*----------------------------------------------------------------------------8
# |                                    END                                      |
# +------------------------------------4--------------------------------------*/
